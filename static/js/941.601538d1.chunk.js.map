{"version":3,"file":"static/js/941.601538d1.chunk.js","mappings":"kRAEaA,EAAiBC,EAAAA,EAAAA,IAAH,uGAMdC,EAAgBD,EAAAA,EAAAA,IAAH,oHAObE,EAAgBF,EAAAA,EAAAA,IAAH,0GAObG,EAAiBH,EAAAA,EAAAA,EAAH,kEAKdI,EAAiBJ,EAAAA,EAAAA,EAAH,4C,SChBZ,SAASK,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,6GAEIC,EAAAA,EAAAA,IAAA,6CACiBP,EADjB,qEAFJ,OAEbQ,EAFa,OAKnBJ,EAAQI,EAASC,KAAKN,MALH,gDAOnBO,QAAQC,IAAR,MAPmB,yDAAH,qDAUpBL,GACD,GAAE,CAACN,KAGF,0BACE,SAACP,EAAD,UACGU,EAAKS,KAAI,SAAAC,GAAK,OACb,UAAClB,EAAD,YACE,SAACC,EAAD,CACEkB,IAAG,yCAAoCD,EAAME,cAC7CC,IAAKH,EAAMI,QAEb,SAACpB,EAAD,UAAiBgB,EAAMI,QACvB,UAACnB,EAAD,yBAA4Be,EAAMK,eANhBL,EAAMM,GADb,OAatB,C","sources":["components/Cast/CastStyles.js","components/Cast/Cast.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const StyledCastGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 10px;\n`;\n\nexport const StyledCastBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n`;\n\nexport const StyledCastImg = styled.img`\n  width: 100px;\n  height: 150px;\n  border-radius: 5px;\n  margin-bottom: 10px;\n`;\n\nexport const StyledCastName = styled.p`\n  font-size: 16px;\n  font-weight: bold;\n`;\n\nexport const StyledCastText = styled.p`\n  font-size: 14px;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport {\n  StyledCastBox,\n  StyledCastGrid,\n  StyledCastImg,\n  StyledCastName,\n  StyledCastText,\n} from './CastStyles';\n\nexport default function Cast() {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const fetchMovieCast = async () => {\n      try {\n        const response = await axios.get(\n          `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=fb3515b73dbebc75ad9d5f107517204c&language=en-US`\n        );\n        setCast(response.data.cast);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchMovieCast();\n  }, [movieId]);\n\n  return (\n    <div>\n      <StyledCastGrid>\n        {cast.map(actor => (\n          <StyledCastBox key={actor.id}>\n            <StyledCastImg\n              src={`https://image.tmdb.org/t/p/w500${actor.profile_path}`}\n              alt={actor.name}\n            />\n            <StyledCastName>{actor.name}</StyledCastName>\n            <StyledCastText>Character: {actor.character}</StyledCastText>\n          </StyledCastBox>\n        ))}\n      </StyledCastGrid>\n    </div>\n  );\n}\n"],"names":["StyledCastGrid","styled","StyledCastBox","StyledCastImg","StyledCastName","StyledCastText","Cast","movieId","useParams","useState","cast","setCast","useEffect","fetchMovieCast","axios","response","data","console","log","map","actor","src","profile_path","alt","name","character","id"],"sourceRoot":""}