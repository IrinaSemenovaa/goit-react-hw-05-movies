{"version":3,"file":"static/js/351.2b841717.chunk.js","mappings":"kRAEaA,EAAmBC,EAAAA,EAAAA,IAAH,6CAIhBC,EAAeD,EAAAA,EAAAA,IAAH,gDAIZE,EAAqBF,EAAAA,EAAAA,EAAH,8CAIlBG,EAAsBH,EAAAA,EAAAA,EAAH,4CAInBI,EAAkBJ,EAAAA,EAAAA,EAAH,+C,SCPb,SAASK,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,6GAECC,EAAAA,EAAAA,IAAA,6CACiBP,EADjB,qEAFD,OAEhBQ,EAFgB,OAKtBJ,EAAWI,EAASC,KAAKC,SALH,gDAOtBC,QAAQC,IAAR,MAPsB,yDAAH,qDAUvBN,GACD,GAAE,CAACN,KAGF,SAACP,EAAD,UACGU,EAAQU,OAAS,EAChBV,EAAQW,KAAI,SAAAC,GAAM,OAChB,UAACpB,EAAD,YACE,UAACC,EAAD,sBAA6BmB,EAAOC,WACpC,SAACnB,EAAD,UAAsBkB,EAAOE,YAFZF,EAAOG,GADV,KAOlB,SAACpB,EAAD,iCAIP,C","sources":["components/Reviews/ReviewsStyles.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const StyledReviewsBox = styled.div`\n  margin-top: 20px;\n`;\n\nexport const StyledReview = styled.div`\n  margin-bottom: 10px;\n`;\n\nexport const StyledReviewAuthor = styled.p`\n  font-weight: bold;\n`;\n\nexport const StyledReviewContent = styled.p`\n  margin-top: 5px;\n`;\n\nexport const StyledNoReviews = styled.p`\n  font-style: italic;\n`;","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport {\n  StyledReview,\n  StyledReviewsBox,\n  StyledReviewAuthor,\n  StyledReviewContent,\n  StyledNoReviews,\n} from './ReviewsStyles';\n\nexport default function Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchMovieReviews = async () => {\n      try {\n        const response = await axios.get(\n          `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=fb3515b73dbebc75ad9d5f107517204c&language=en-US`\n        );\n        setReviews(response.data.results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchMovieReviews();\n  }, [movieId]);\n\n  return (\n    <StyledReviewsBox>\n      {reviews.length > 0 ? (\n        reviews.map(review => (\n          <StyledReview key={review.id}>\n            <StyledReviewAuthor>Author: {review.author}</StyledReviewAuthor>\n            <StyledReviewContent>{review.content}</StyledReviewContent>\n          </StyledReview>\n        ))\n      ) : (\n        <StyledNoReviews>No reviews found.</StyledNoReviews>\n      )}\n    </StyledReviewsBox>\n  );\n}\n"],"names":["StyledReviewsBox","styled","StyledReview","StyledReviewAuthor","StyledReviewContent","StyledNoReviews","Reviews","movieId","useParams","useState","reviews","setReviews","useEffect","fetchMovieReviews","axios","response","data","results","console","log","length","map","review","author","content","id"],"sourceRoot":""}